#===============================================
# Description: ARMv8 OpenWrt
# Lisence: MIT
# By：Jejz
#===============================================

name: ARMv8 OpenWrt快速打包

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Select 0penwrt SoC"
        required: false
        default: "s905d"
        type: choice
        options:
          - s905d
      kernel_download:
        description: "Select kernel download"
        required: false
        default: "breakings/OpenWrt"
        type: choice
        options:
          - Jejz168/compile-kernel
          - breakings/OpenWrt
          - ophub/kernel
      kernel_version:
        description: "Select kernel version"
        required: false
        default: "5.4.228_5.10.161_5.15.100_6.1.8"
        type: choice
        options:
          - 5.4.228_5.10.161_5.15.100_6.1.8
          - 5.4.228_5.15.100
          - 5.15.100_6.1.8
          - 5.4.228
          - 5.15.100
          - 6.1.8
      #openwrt_version:
      #  description: "Set the openwrt version"
      #  required: false
      #  default: "R23.8.23"
  #schedule:
    #- cron: '45 22 * * *'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: armv8/feeds.conf.default
  CONFIG_FILE: armv8/armv8.config
  DIY_P1_SH: armv8/diy-part1.sh
  DIY_P2_SH: armv8/diy-part2.sh
  UPLOAD_FIRMWARE: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  FILE_NAME: ARMv8
  PRODUCT_NAME: ARMv8
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
  TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-get update
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/ophub/amlogic-s9xxx-armbian/main/compile-kernel/tools/script/ubuntu2204-make-openwrt-depends)
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
          
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        Author=$(git show -s --date=short --format="Author: %an")
        Date=$(git show -s --date=short --format="date: %ci")
        Commit=$(git show -s --date=short --format="commit: %s")
        Hash=$(git show -s --date=short --format="commit hash: %h")
        echo "author=$Author" >> $GITHUB_ENV
        echo "date=$Date" >> $GITHUB_ENV
        echo "commit=$Commit" >> $GITHUB_ENV
        echo "hash=$Hash" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "TAG=$(date "+%Y%m%d")" >> $GITHUB_ENV
        echo "TAG=$(date "+%Y%m%d")" >> $GITHUB_ENV
        echo "start=$(date +%s)" >> $GITHUB_ENV
    
    - name: Package Armvirt as OpenWrt
      if: (!cancelled())
      uses: acnixuil/openwrt_packit@master
      env:
        #SCRIPT_REPO_URL: acnixuil/openwrt_packit
        OPENWRT_ARMVIRT: https://github.com/acnixuil/Snapshot-Lede/releases/download/ARMv8-ROOTFS/openwrt-armvirt-64-generic-rootfs.tar.gz
        PACKAGE_SOC: ${{ github.event.inputs.openwrt_soc }}
        WHOAMI: neuroxD
        ENABLE_WIFI_K504: 0
        ENABLE_WIFI_K510: 0
        #OPENWRT_VER: ${{ github.event.inputs.openwrt_version }}
        DISTRIB_REVISION: ${OPENWRT_VER} (By @neuroxD build $(TZ=UTC-8 date "+%Y-%m-%d %H:%M"))
        KERNEL_REPO_URL: https://github.com/${{ github.event.inputs.kernel_download }}/releases/tag/kernel_stable
        KERNEL_VERSION_NAME: ${{ github.event.inputs.kernel_version }}
        KERNEL_AUTO_LATEST: true
        GZIP_IMGS: .gz

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@v1
      if: env.PACKAGED_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: ${{ env.DATE }} 「 ${{ env.FILE_NAME }} 」固件
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ env.PRODUCT_NAME }}
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
          - 🔖 此为 ${{ env.FILE_NAME }} 固件
          - 🔖 默认IP：192.168.2.254 默认密码：password
          - 🔖 时间: ${{ env.date }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        
    - name: Completion time 
      run: |
        echo "DATE1=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        end=$(date +%s)
        seconds=$(( end - start ))
        hour=$(( $seconds/3600 ))
        min=$(( ($seconds-${hour}*3600)/60 ))
        sec=$(( $seconds-${hour}*3600-${min}*60 ))
        HMS=`echo ${hour}:${min}:${sec}`
        echo "time=$HMS" >> $GITHUB_ENV
        
    - name: Telegram notification upload success
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: |
          🔖${{ env.PRODUCT_NAME }}打包完成
